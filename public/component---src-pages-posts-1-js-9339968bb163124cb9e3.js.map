{"version":3,"sources":["webpack:///./src/pages/posts.1.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/@babel/runtime/helpers/taggedTemplateLiteralLoose.js"],"names":["GatsbyQuery","APOLLO_QUERY","gql","_templateObject","__webpack_exports__","_ref","character","data","rickAndMorty","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","style","textAlign","name","src","image","alt","width","react_apollo__WEBPACK_IMPORTED_MODULE_4__","query","_ref2","loading","error","console","log","message","display","flexWrap","alignContent","justifyContent","padding","margin","flexDirection","background","borderRadius","posts","map","post","key","_id","fontSize","fontFamily","boxShadow","className","createdAt","title","content","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","module","exports","strings","raw","slice"],"mappings":"4ZAOO,IAAMA,EAAW,aAYlBC,QAAeC,GAAHC,KAeHC,EAAA,iBAAAC,GAAA,IAEKC,EAFLD,EACbE,KACEC,aAAgBF,UAFL,OAKbG,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,WACvBJ,EAAAC,EAAAC,cAAA,UAAKL,EAAUQ,KAAf,oBACAL,EAAAC,EAAAC,cAAA,uFAGAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,IAAKT,EAAUU,MAAOC,IAAKX,EAAUQ,KAAMF,MAAO,CAAEM,MAAO,OAEhET,EAAAC,EAAAC,cAACQ,EAAA,MAAD,CAAOC,MAAOnB,GACX,SAAAoB,GAA8B,IAA3Bd,EAA2Bc,EAA3Bd,KAAMe,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,MACjB,OAAID,EAAgBb,EAAAC,EAAAC,cAAA,8BAChBY,EAAcC,QAAQC,IAAIF,EAAMG,UAIpCF,QAAQC,IAAIlB,GAEVE,EAAAC,EAAAC,cAAA,8BAMEF,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLe,QAAS,OACTC,SAAU,OAEZC,aAAa,SACbC,eAAgB,aACdC,QAAS,IACTC,OAAQ,IACRC,cAAe,MACfC,WAAY,OACZhB,MAAO,OACPiB,aAAc,SAOfX,QAAQC,IAAIlB,EAAK6B,OACjB7B,EAAK6B,MAAMC,IAAI,SAAAC,GAAI,OAClB7B,EAAAC,EAAAC,cAAA,OACE4B,IAAKD,EAAKE,IACV5B,MAAO,CACL6B,SAAU,OACVC,WAAY,YACZV,OAAQ,cACRD,QAAS,cACTI,aAAc,OACdjB,MAAO,MACPgB,WAAY,aACZS,UAAW,oCAGblC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKiC,UAAU,cACZN,EAAKE,IACN/B,EAAAC,EAAAC,cAAA,WACC2B,EAAKO,UACNpC,EAAAC,EAAAC,cAAA,WACC2B,EAAKQ,MACNrC,EAAAC,EAAAC,cAAA,WACC2B,EAAKS,SAERtC,EAAAC,EAAAC,cAAA,OAAKiC,UAAU,eAEdN,EAAKS,0CC7G9B,IAAAC,EAASC,EAAQ,IAAcC,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkBF,EAAQ,KAAgBD,EAAAG,EAH1C,OAG0C,CAC1CI,cAAA,EACAC,IAAA,WACA,IACA,UAAAC,MAAAC,MAAAJ,GAAA,GACK,MAAAK,GACL,gCCHAC,EAAAC,QATA,SAAAC,EAAAC,GAMA,OALAA,IACAA,EAAAD,EAAAE,MAAA,IAGAF,EAAAC,MACAD","file":"component---src-pages-posts-1-js-9339968bb163124cb9e3.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\n// import Link from \"gatsby\"\r\n\r\n// This query is executed at build time by Gatsby.\r\nexport const GatsbyQuery = graphql`\r\n  {\r\n    rickAndMorty {\r\n      character(id: 1) {\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// This query is executed at run time by Apollo.\r\nconst APOLLO_QUERY = gql`\r\n  query POSTS {\r\n    posts {\r\n      _id\r\n      content\r\n      title\r\n      createdAt\r\n\r\n      cover {\r\n        public_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({\r\n  data: {\r\n    rickAndMorty: { character },\r\n  },\r\n}) => (\r\n  <div style={{ textAlign: 'center' }}>\r\n    <h1>{character.name} With His Pupper</h1>\r\n    <p>\r\n      Rick & Morty API data loads at build time. Dog API data loads at run time.\r\n    </p>\r\n    <div>\r\n      <img src={character.image} alt={character.name} style={{ width: 300 }} />\r\n\r\n      <Query query={APOLLO_QUERY}>\r\n        {({ data, loading, error }) => {\r\n          if (loading) return <p>Loading pupper...</p>;\r\n          if (error) return console.log(error.message); // if: TODO: added so error on load would not show on the screen.\r\n\r\n          // const { displayImage: src, breed } = data.dog;\r\n          // return <img src={src} alt={breed} style={{ maxWidth: 300 }} />;\r\n          console.log(data);\r\n          return (\r\n            <div>\r\n              posts in console\r\n              \r\n               \r\n\r\n\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  flexWrap: 'wrap',\r\n                //   justifyContent: 'flex-center',\r\n                alignContent:\"center\",\r\n                justifyContent: \"flex-start\",\r\n                  padding: '0',\r\n                  margin: '0',\r\n                  flexDirection: 'row',\r\n                  background: 'grey',\r\n                  width: '100%',\r\n                  borderRadius: '42px',\r\n                }}\r\n              >\r\n   \r\n\r\n\r\n\r\n                {console.log(data.posts)}\r\n                {data.posts.map(post => (\r\n                  <div\r\n                    key={post._id}\r\n                    style={{\r\n                      fontSize: '16px',\r\n                      fontFamily: 'monospace',\r\n                      margin: '1% 1% 1% 1%',\r\n                      padding: '2% 1% 1% 1%',\r\n                      borderRadius: '36px',     \r\n                      width: '46%',\r\n                      background: 'whitesmoke',\r\n                      boxShadow: \"0px 1px 1px 1px rgba(0,0,0,0.2)\"\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      <div>\r\n                        <div className=\"post-inner\">\r\n                          {post._id}\r\n                          <br />\r\n                          {post.createdAt}\r\n                          <br />\r\n                          {post.title}\r\n                          <br />\r\n                          {post.content}\r\n                        </div>\r\n                        <div className=\"post-inner\" />\r\n\r\n                        {post.content}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Query>\r\n    </div>\r\n  </div>\r\n);\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\nmodule.exports = _taggedTemplateLiteralLoose;"],"sourceRoot":""}