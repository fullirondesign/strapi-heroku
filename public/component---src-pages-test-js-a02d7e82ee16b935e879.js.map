{"version":3,"sources":["webpack:///./src/pages/test.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/@babel/runtime/helpers/taggedTemplateLiteralLoose.js"],"names":["GatsbyQuery","APOLLO_QUERY","gql","_templateObject","POST_MUTATION","_templateObject2","test","state","title","content","render","_this2","this","_this$state","character","props","data","rickAndMorty","console","log","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","style","textAlign","name","src","image","alt","width","react_apollo__WEBPACK_IMPORTED_MODULE_6__","query","_ref","loading","error","message","className","value","onChange","e","setState","target","type","placeholder","mutation","variables","postMutation","onClick","display","flexWrap","alignContent","justifyContent","padding","margin","flexDirection","background","borderRadius","posts","map","post","key","_id","fontSize","fontFamily","boxShadow","createdAt","Component","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","match","module","exports","strings","raw","slice"],"mappings":"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","file":"component---src-pages-test-js-a02d7e82ee16b935e879.js","sourcesContent":["import React, { Component } from 'react';\r\n// import { graphql } from 'gatsby';\r\n// import { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from 'react-apollo'\r\n\r\nimport { graphql } from 'gatsby';\r\nimport { Query } from 'react-apollo';\r\n\r\n// import Link from \"gatsby\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// This query is executed at build time by Gatsby.\r\nexport const GatsbyQuery = graphql`\r\n  {\r\n    rickAndMorty {\r\n      character(id: 1) {\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// This query is executed at run time by Apollo.\r\nconst APOLLO_QUERY = gql`\r\n  query POSTS {\r\n    posts {\r\n      _id\r\n      content\r\n      title\r\n      createdAt\r\n\r\n      cover {\r\n        public_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst POST_MUTATION = gql`\r\nmutation PostMutation($title: String!, $content: String!) {\r\n    createPost(input:\r\n      {data:\r\n        {title: $title, content: $content}\r\n      }\r\n    ) \r\n  {\r\n    post {\r\n      _id\r\n      content\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport default class test extends Component {\r\n\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n  };\r\n  \r\n \r\n \r\n  \r\n  render() {\r\n    \r\n    const { title, content } = this.state;      \r\n    const { character } = this.props.data.rickAndMorty;\r\n    console.log(\"character :\", character)\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n        <h1>{character.name} With His Pupper</h1>\r\n        <p>\r\n          Rick & Morty API data loads at build time. Dog API data loads at run time.\r\n        </p>\r\n        <div>\r\n          <img src={character.image} alt={character.name} style={{ width: 300 }} />\r\n    \r\n          <Query query={APOLLO_QUERY}>\r\n            {({ data, loading, error }) => {\r\n              if (loading) return <p>Loading pupper...</p>;\r\n              if (error) return console.log(error.message); // if: TODO: added so error on load would not show on the screen.\r\n    \r\n              // const { displayImage: src, breed } = data.dog;\r\n              // return <img src={src} alt={breed} style={{ maxWidth: 300 }} />;\r\n              console.log(\"data in apppolo querry\", data);\r\n              return (\r\n                <div>\r\n                  posts in console\r\n                  \r\n                  <div>\r\n            <div className=\"flex flex-column mt3\">\r\n              <input\r\n                className=\"mb2\"\r\n                value={title}\r\n                onChange={e => this.setState({ title: e.target.value })}\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n              />\r\n              <input\r\n                className=\"mb2\"\r\n                value={content}\r\n                onChange={e => this.setState({ content: e.target.value })}\r\n                type=\"text\"\r\n                placeholder=\"title\"\r\n              />\r\n            </div>\r\n            <Mutation mutation={POST_MUTATION} variables={{ title, content }}>\r\n              {postMutation => <button onClick={postMutation}>Submit</button>}\r\n            </Mutation>\r\n          </div>\r\n    \r\n    \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexWrap: 'wrap',\r\n                    //   justifyContent: 'flex-center',\r\n                    alignContent:\"center\",\r\n                    justifyContent: \"flex-start\",\r\n                      padding: '0',\r\n                      margin: '0',\r\n                      flexDirection: 'row',\r\n                      background: 'grey',\r\n                      width: '100%',\r\n                      borderRadius: '42px',\r\n                    }}\r\n                  >\r\n       \r\n    \r\n    \r\n    \r\n                    {console.log(data.posts)}\r\n                    {data.posts.map(post => (\r\n                      <div\r\n                        key={post._id}\r\n                        style={{\r\n                          fontSize: '16px',\r\n                          fontFamily: 'monospace',\r\n                          margin: '1% 1% 1% 1%',\r\n                          padding: '2% 1% 1% 1%',\r\n                          borderRadius: '36px',     \r\n                          width: '46%',\r\n                          background: 'whitesmoke',\r\n                          boxShadow: \"0px 1px 1px 1px rgba(0,0,0,0.2)\"\r\n                        }}\r\n                      >\r\n                        <div>\r\n                          <div>\r\n                            <div className=\"post-inner\">\r\n                              {post._id}\r\n                              <br />\r\n                              {post.createdAt}\r\n                              <br />\r\n                              {post.title}\r\n                              <br />\r\n                              {post.content}\r\n                            </div>\r\n                            <div className=\"post-inner\" />\r\n    \r\n                            {post.content}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          </Query>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// export default ({\r\n//   data: {\r\n//     rickAndMorty: { character },\r\n//   },\r\n// }) => (\r\n  \r\n// );\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\nmodule.exports = _taggedTemplateLiteralLoose;"],"sourceRoot":""}